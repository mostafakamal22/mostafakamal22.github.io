{"version":3,"sources":["App.js","index.js"],"names":["App","useState","quoteData","setQouteData","color","setColor","fetchData","a","fadeOutElements","document","getElementsByClassName","i","length","style","opacity","fetch","response","json","data","randomColor","Math","floor","random","setTimeout","author","content","useEffect","Container","fluid","backgroundColor","height","className","maxWidth","id","Row","size","Col","title","href","target","rel","Button","onClick","ReactDOM","render","getElementById"],"mappings":"yRAKe,SAASA,IACtB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAS,uCAAG,oCAAAC,EAAA,sDAGhB,IADMC,EAAkBC,SAASC,uBAAuB,mBAC/CC,EAAI,EAAGA,EAAIH,EAAgBI,OAAQD,IAC1CH,EAAgBG,GAAGE,MAAMC,QAAU,EAJrB,gBAOOC,MAAM,kCAPb,cAOVC,EAPU,gBAQGA,EAASC,OARZ,OAQVC,EARU,OAWZC,EAAcC,KAAKC,MAAM,IAAAD,KAAKE,SAAuB,GAEzDjB,EAASc,GAETI,YAAW,WACTpB,EAAa,CACXqB,OAAQN,EAAKM,OACbC,QAASP,EAAKO,YAEf,KApBa,4CAAH,qDAqCf,OAdAC,qBAAU,WAERpB,MACC,IAEHoB,qBAAU,WAIR,IAFA,IAAMlB,EAAkBC,SAASC,uBAAuB,mBAE/CC,EAAI,EAAGA,EAAIH,EAAgBI,OAAQD,IAC1CH,EAAgBG,GAAGE,MAAMC,QAAU,IAEpC,CAACZ,IAGF,cAACyB,EAAA,EAAD,CACEC,OAAK,EACLf,MAAO,CAAEgB,gBAAgB,OAAD,OAASzB,EAAT,eAA6B0B,OAAQ,SAC7DC,UAAU,gFAHZ,SAKE,eAACJ,EAAA,EAAD,CACEd,MAAO,CAAEmB,SAAU,KACnBC,GAAG,YACHF,UAAU,8BAHZ,UAKE,eAACG,EAAA,EAAD,CAAKH,UAAU,OAAf,UACE,qBACEA,UAAU,mCACVE,GAAG,OACHpB,MAAO,CAAET,MAAM,OAAD,OAASA,EAAT,gBAHhB,UAKE,cAAC,IAAD,CAAO+B,KAAM,GAAIJ,UAAU,cAC1B7B,EAAUuB,WAEb,oBACEM,UAAU,2BACVlB,MAAO,CAAET,MAAM,OAAD,OAASA,EAAT,gBACd6B,GAAG,SAHL,eAKK/B,EAAUsB,aAIjB,eAACU,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,CAAKL,UAAU,aAAf,SACE,mBACEM,MAAM,8BACNxB,MAAO,CAAEgB,gBAAgB,OAAD,OAASzB,EAAT,gBACxB2B,UAAU,uFACVO,KAAI,0FAAqFpC,EAAUuB,QAA/F,cAA4GvB,EAAUsB,QAC1He,OAAO,SACPC,IAAI,aACJP,GAAG,cAPL,SASE,cAAC,IAAD,CAASE,KAAM,SAInB,cAACC,EAAA,EAAD,CAAKL,UAAU,WAAf,SACE,cAACU,EAAA,EAAD,CACEC,QAAS,kBAAMpC,KACfO,MAAO,CAAEgB,gBAAgB,OAAD,OAASzB,EAAT,gBACxB2B,UAAU,sBACVE,GAAG,YAJL,iC,MCrFZU,IAASC,OACL,cAAC5C,EAAD,IACFS,SAASoC,eAAe,W","file":"static/js/main.42a5e261.chunk.js","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport { Twitter, Quote } from \"react-bootstrap-icons\";\n\nexport default function App() {\n  const [quoteData, setQouteData] = useState({});\n  const [color, setColor] = useState(0);\n\n  const fetchData = async () => {\n    //fade out\n    const fadeOutElements = document.getElementsByClassName(\"fade-transition\");\n    for (let i = 0; i < fadeOutElements.length; i++) {\n      fadeOutElements[i].style.opacity = 0;\n    }\n    //fetching new quote\n    const response = await fetch(\"https://api.quotable.io/random\");\n    const data = await response.json();\n\n    //setting new color\n    let randomColor = Math.floor(Math.random() * (300 - 1) + 1);\n    //change page color\n    setColor(randomColor);\n    //adding the new quote to the page\n    setTimeout(() => {\n      setQouteData({\n        author: data.author,\n        content: data.content,\n      });\n    }, 400);\n  };\n\n  useEffect(() => {\n    //Fetch Quote At Mount\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    //fade in\n    const fadeOutElements = document.getElementsByClassName(\"fade-transition\");\n\n    for (let i = 0; i < fadeOutElements.length; i++) {\n      fadeOutElements[i].style.opacity = 1;\n    }\n  }, [quoteData]);\n\n  return (\n    <Container\n      fluid\n      style={{ backgroundColor: `hsl(${color}, 50%, 30%)`, height: \"100vh\" }}\n      className=\"bg-gradient d-flex justify-content-center align-items-center color-transition\"\n    >\n      <Container\n        style={{ maxWidth: 550 }}\n        id=\"quote-box\"\n        className=\"rounded shadow bg-light p-5\"\n      >\n        <Row className=\"mb-3\">\n          <h2\n            className=\"text-center mb-3 fade-transition\"\n            id=\"text\"\n            style={{ color: `hsl(${color}, 50%, 30%)` }}\n          >\n            <Quote size={40} className=\"me-1 pb-1\" />\n            {quoteData.content}\n          </h2>\n          <p\n            className=\"text-end fade-transition\"\n            style={{ color: `hsl(${color}, 50%, 30%)` }}\n            id=\"author\"\n          >\n            - {quoteData.author}\n          </p>\n        </Row>\n\n        <Row>\n          <Col className=\"text-start\">\n            <a\n              title=\"Post this quote on twitter!\"\n              style={{ backgroundColor: `hsl(${color}, 50%, 30%)` }}\n              className=\"d-flex align-items-center  justify-content-center w-25 h-100 text-light rounded me-1\"\n              href={`https://www.twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=\"${quoteData.content}\" -${quoteData.author}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              id=\"tweet-quote\"\n            >\n              <Twitter size={20} />\n            </a>\n          </Col>\n\n          <Col className=\"text-end\">\n            <Button\n              onClick={() => fetchData()}\n              style={{ backgroundColor: `hsl(${color}, 50%, 30%)` }}\n              className=\"text-light border-0\"\n              id=\"new-quote\"\n            >\n              New Quote\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}