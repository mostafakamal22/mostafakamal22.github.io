{"version":3,"sources":["App.js","index.js"],"names":["App","useState","quoteData","setQouteData","color","setColor","fetchData","a","fadeOutElements","document","getElementsByClassName","i","length","style","opacity","fetch","response","json","data","setTimeout","randomColor","Math","floor","random","author","content","useEffect","Container","fluid","backgroundColor","height","className","maxWidth","id","Row","size","Col","title","href","target","rel","Button","onClick","ReactDOM","render","getElementById"],"mappings":"yRAOe,SAASA,IAEtB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAGMC,EAAS,uCAAG,oCAAAC,EAAA,sDAGhB,IADMC,EAAkBC,SAASC,uBAAuB,mBAC/CC,EAAE,EAAIA,EAAEH,EAAgBI,OAAQD,IACvCH,EAAgBG,GAAGE,MAAMC,QAAQ,IAJnB,gBAOMC,MAAM,kCAPZ,cAOVC,EAPU,gBAQGA,EAASC,OARZ,OAQVC,EARU,OAUhBC,YAAW,WACT,IAAK,IAAIR,EAAE,EAAIA,EAAEH,EAAgBI,OAAQD,IACvCH,EAAgBG,GAAGE,MAAMC,QAAQ,IAElC,KAECM,EAAcC,KAAKC,MAAM,IAAAD,KAAKE,SAAiB,GAEnDlB,EAASe,GAETjB,EAAa,CACXqB,OAAQN,EAAKM,OACbC,QAASP,EAAKO,UAtBA,4CAAH,qDA8Bf,OALAC,qBAAU,WACRpB,MACA,IAIA,cAACqB,EAAA,EAAD,CACAC,OAAK,EACLf,MAAO,CAACgB,gBAAgB,OAAD,OAAQzB,EAAR,eAA2B0B,OAAO,SACzDC,UAAU,gFAHV,SAKE,eAACJ,EAAA,EAAD,CACAd,MAAO,CAACmB,SAAS,KACjBC,GAAG,YACHF,UAAU,8BAHV,UAIE,eAACG,EAAA,EAAD,CAAKH,UAAU,OAAf,UACE,qBACAA,UAAU,mCACVE,GAAG,OACHpB,MAAO,CAACT,MAAM,OAAD,OAAQA,EAAR,gBAHb,UAIE,cAAC,IAAD,CAAO+B,KAAM,GAAIJ,UAAU,cAC1B7B,EAAUuB,WAEb,oBACAM,UAAU,2BACVlB,MAAO,CAACT,MAAM,OAAD,OAAQA,EAAR,gBACb6B,GAAG,SAHH,eAIK/B,EAAUsB,aAIjB,eAACU,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,CAAKL,UAAU,aAAf,SACE,mBACAM,MAAM,8BACNxB,MAAO,CAACgB,gBAAgB,OAAD,OAAQzB,EAAR,gBACvB2B,UAAU,uFACVO,KAAI,0FAAqFpC,EAAUuB,QAA/F,cAA4GvB,EAAUsB,QAC1He,OAAO,SACPC,IAAI,aACJP,GAAG,cAPH,SAQE,cAAC,IAAD,CAAUE,KAAM,SAIpB,cAACC,EAAA,EAAD,CAAKL,UAAU,WAAf,SACE,cAACU,EAAA,EAAD,CACAC,QAAS,kBAAKpC,KACdO,MAAO,CAACgB,gBAAgB,OAAD,OAAQzB,EAAR,gBACvB2B,UAAU,sBACVE,GAAG,YAJH,iC,MC9EZU,IAASC,OACL,cAAC5C,EAAD,IACFS,SAASoC,eAAe,W","file":"static/js/main.2701469d.chunk.js","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Button, Col, Container, Row } from 'react-bootstrap';\nimport { Twitter, Quote } from 'react-bootstrap-icons';\n\n\n\nexport default function App() {\n\n  const [quoteData, setQouteData] = useState({})\n  const [color, setColor] = useState(0)\n  \n\n  const fetchData = async ()=>{\n    //fade out  \n    const fadeOutElements = document.getElementsByClassName(\"fade-transition\")\n    for (let i=0 ; i<fadeOutElements.length; i++){\n      fadeOutElements[i].style.opacity=0.01\n    }\n    //fetching new quote\n    const response =await fetch('https://api.quotable.io/random')\n    const data = await response.json()\n    //fade in \n    setTimeout(() => {\n      for (let i=0 ; i<fadeOutElements.length; i++){\n        fadeOutElements[i].style.opacity=1\n      }\n    }, 400)\n    //setting new color\n    let randomColor = Math.floor(Math.random()*(300-1)+1)\n    //change page color \n    setColor(randomColor)\n    //adding the new quote to the page\n    setQouteData({\n      author: data.author,\n      content: data.content\n    })\n  }\n  useEffect(() => {\n    fetchData()\n  },[])\n\n\n  return (\n    <Container \n    fluid \n    style={{backgroundColor:`hsl(${color}, 50%, 30%)`,height:\"100vh\"}} \n    className='bg-gradient d-flex justify-content-center align-items-center color-transition'>\n\n      <Container\n      style={{maxWidth:550}} \n      id=\"quote-box\" \n      className='rounded shadow bg-light p-5'>\n        <Row className='mb-3'>\n          <h2 \n          className='text-center mb-3 fade-transition'\n          id=\"text\"\n          style={{color:`hsl(${color}, 50%, 30%)`}}>\n            <Quote size={40} className='me-1 pb-1'/>\n            {quoteData.content}\n          </h2>\n          <p \n          className='text-end fade-transition'\n          style={{color:`hsl(${color}, 50%, 30%)`}} \n          id=\"author\">\n            - {quoteData.author}\n          </p>\n        </Row>\n        \n        <Row>\n          <Col className='text-start'>\n            <a\n            title='Post this quote on twitter!'\n            style={{backgroundColor:`hsl(${color}, 50%, 30%)`}}  \n            className='d-flex align-items-center  justify-content-center w-25 h-100 text-light rounded me-1'\n            href={`https://www.twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=\"${quoteData.content}\" -${quoteData.author}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            id=\"tweet-quote\">\n              <Twitter  size={20} />\n            </a>\n          </Col>\n\n          <Col className='text-end'>\n            <Button \n            onClick={()=> fetchData()}\n            style={{backgroundColor:`hsl(${color}, 50%, 30%)`}}\n            className='text-light border-0'\n            id=\"new-quote\">\n              New Quote\n          </Button>\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}