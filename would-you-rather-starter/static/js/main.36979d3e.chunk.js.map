{"version":3,"sources":["utils/_DATA.js","img/users-avatars/icon1.png","img/users-avatars/icon2.png","img/users-avatars/icon3.png","img/users-avatars/icon4.png","img/users-avatars/icon5.png","actions/users.js","actions/questions.js","actions/authedUser.js","actions/shared.js","components/NewQuestion.js","img/logo.jpg","components/SignIn.js","components/QuestionOverview.js","components/QuestionsContainer.js","components/NavBar.js","img/leaderBoard/first-place.png","img/leaderBoard/second-place.png","img/leaderBoard/third-place.png","components/LeaderBoard.js","components/NotFound.js","components/QuestionForm.js","components/Question.js","components/App.js","reducers/index.js","reducers/users.js","reducers/questions.js","reducers/authedUser.js","middleware/logger.js","middleware/index.js","index.js"],"names":["avatarURLs","icon1","icon2","icon3","icon4","icon5","users","sarahedo","id","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_createNewUser","user","Promise","res","rej","formattedUser","avatar","formatUser","setTimeout","_saveQuestion","question","authedUser","authed","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","concat","GET_USERS","CREATE_NEW_USER","handleCreateNewUser","dispatch","showLoading","then","type","createNewUser","hideLoading","GET_QUESTIONS","SAVE_QUESTION","SAVE_QUESTION_ANSWER","handleSaveQuestion","info","saveQuestion","handleSaveQuestionAnswer","answer","question_id","selectedOption","_saveQuestionAnswer","saveQuestionAnswer","GET_AUTHED_USER","SET_AUTHED_USER","setAuthedUser","handleInitialData","all","getUsers","getQuestions","NewQuestion","state","questionSubmitted","handleChangeOne","event","setState","target","value","handleChangeTwo","handleSubmit","preventDefault","auther","props","this","Container","className","Row","style","fontWeight","maxWidth","Form","onSubmit","FloatingLabel","controlId","label","Control","required","placeholder","onChange","Button","variant","to","Component","connect","SignIn","selectedUser","newUserName","newUserId","alertLogin","alertSignUp","handleChange","handleChangeNewName","handleChangeNewId","handleSubmitNew","usersNames","usersIDs","includes","trim","handleChangeAvatar","fluid","height","overflowY","Image","src","logo","roundedCircle","Col","lg","Select","disabled","map","userName","index","Alert","maxHeight","Group","as","Label","Object","values","icon","Check","inline","alt","push","keys","QuestionOverview","Answered","qID","md","pathname","QuestionsContainer","unAnswered","handleClick","bool","answeredQuestionsData","UnansweredQuestionsData","onClick","q","length","theAuthedUser","find","answeredQuestions","ansQuestion","wantedData","sort","a","b","UnansweredQuestions","filtered","filteredID","indexOf","splice","unansQuestion","loggedInUser","UserInfo","undefined","userAvatar","path","useLocation","Nav","sm","xs","Item","size","LeaderBoard","LeaderBoardData","rounded","first","second","third","createdQuestions","score","userId","userData","NotFound","QuestionForm","questionData","checked","location","split","checkVoteOne","checkVoteTwo","voteForOne","voteForTwo","totalVotes","votePercentForOne","toFixed","votePercentForTwo","selectedoption","width","App","backgroundColor","position","exact","combineReducers","action","loadingBar","loadingBarReducer","logger","store","next","console","group","log","returnValue","getState","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36979d3e.chunk.js","sourcesContent":["import icon1 from \"../img/users-avatars/icon1.png\"\r\nimport icon2 from \"../img/users-avatars/icon2.png\"\r\nimport icon3 from \"../img/users-avatars/icon3.png\"\r\nimport icon4 from \"../img/users-avatars/icon4.png\"\r\nimport icon5 from \"../img/users-avatars/icon5.png\"\r\n\r\nexport let avatarURLs = {\r\n  icon1,\r\n  icon2,\r\n  icon3,\r\n  icon4,\r\n  icon5\r\n}\r\nlet users = {\r\n  sarahedo: {\r\n    id: 'sarahedo',\r\n    name: 'Sarah Edo',\r\n    avatarURL: avatarURLs.icon5,\r\n    answers: {\r\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\r\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\r\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\r\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\r\n    },\r\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\r\n  },\r\n  tylermcginnis: {\r\n    id: 'tylermcginnis',\r\n    name: 'Tyler McGinnis',\r\n    avatarURL: avatarURLs.icon2,\r\n    answers: {\r\n      \"vthrdm985a262al8qx3do\": 'optionOne',\r\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\r\n    },\r\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\r\n  },\r\n  johndoe: {\r\n    id: 'johndoe',\r\n    name: 'John Doe',\r\n    avatarURL: avatarURLs.icon4,\r\n    answers: {\r\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\r\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\r\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\r\n    },\r\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\r\n  }\r\n}\r\n\r\nlet questions = {\r\n  \"8xf0y6ziyjabvozdd253nd\": {\r\n    id: '8xf0y6ziyjabvozdd253nd',\r\n    author: 'sarahedo',\r\n    timestamp: 1467166872634,\r\n    optionOne: {\r\n      votes: ['sarahedo'],\r\n      text: 'have horrible short term memory',\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: 'have horrible long term memory'\r\n    }\r\n  },\r\n  \"6ni6ok3ym7mf1p33lnez\": {\r\n    id: '6ni6ok3ym7mf1p33lnez',\r\n    author: 'johndoe',\r\n    timestamp: 1468479767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'become a superhero',\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe', 'sarahedo'],\r\n      text: 'become a supervillain'\r\n    }\r\n  },\r\n  \"am8ehyc8byjqgar0jgpub9\": {\r\n    id: 'am8ehyc8byjqgar0jgpub9',\r\n    author: 'sarahedo',\r\n    timestamp: 1488579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be telekinetic',\r\n    },\r\n    optionTwo: {\r\n      votes: ['sarahedo'],\r\n      text: 'be telepathic'\r\n    }\r\n  },\r\n  \"loxhs1bqm25b708cmbf3g\": {\r\n    id: 'loxhs1bqm25b708cmbf3g',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1482579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be a front-end developer',\r\n    },\r\n    optionTwo: {\r\n      votes: ['sarahedo'],\r\n      text: 'be a back-end developer'\r\n    }\r\n  },\r\n  \"vthrdm985a262al8qx3do\": {\r\n    id: 'vthrdm985a262al8qx3do',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1489579767190,\r\n    optionOne: {\r\n      votes: ['tylermcginnis'],\r\n      text: 'find $50 yourself',\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe'],\r\n      text: 'have your best friend find $500'\r\n    }\r\n  },\r\n  \"xj352vofupe1dqz9emx13r\": {\r\n    id: 'xj352vofupe1dqz9emx13r',\r\n    author: 'johndoe',\r\n    timestamp: 1493579767190,\r\n    optionOne: {\r\n      votes: ['johndoe'],\r\n      text: 'write JavaScript',\r\n    },\r\n    optionTwo: {\r\n      votes: ['tylermcginnis'],\r\n      text: 'write Swift'\r\n    }\r\n  },\r\n}\r\n\r\nfunction generateUID () {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\r\n}\r\n\r\nexport function _getUsers () {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({...users}), 1000)\r\n  })\r\n}\r\n\r\nexport function _getQuestions () {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({...questions}), 1000)\r\n  })\r\n}\r\n\r\nfunction formatQuestion ({ optionOneText, optionTwoText, authed }) {\r\n  return {\r\n    id: generateUID(),\r\n    timestamp: Date.now(),\r\n    author:authed,\r\n    optionOne: {\r\n      votes: [],\r\n      text: optionOneText,\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: optionTwoText,\r\n    }\r\n  }\r\n}\r\n\r\nfunction formatUser (user) {\r\n  return {\r\n    [user.id]: {\r\n      id: user.id,\r\n      name: user.name,\r\n      avatarURL: user.avatar,\r\n      answers: {},\r\n      questions: []\r\n    }\r\n  }\r\n}\r\n\r\nexport function _createNewUser (user) {\r\n  return new Promise((res, rej) => {\r\n    \r\n    const formattedUser = formatUser(user);\r\n\r\n    setTimeout(() => {\r\n    \r\n      users = {\r\n        ...users,\r\n        ...formattedUser\r\n      }\r\n\r\n      res(formattedUser)\r\n    }, 1000)\r\n  })\r\n} \r\n\r\nexport function _saveQuestion (question) {\r\n  return new Promise((res, rej) => {\r\n    \r\n    const authedUser = question.authed;\r\n    const formattedQuestion = formatQuestion(question);\r\n\r\n    setTimeout(() => {\r\n      questions = {\r\n        ...questions,\r\n        [formattedQuestion.id]: formattedQuestion\r\n      }\r\n      \r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\r\n        }\r\n      }\r\n\r\n      res(formattedQuestion)\r\n    }, 1000)\r\n  })\r\n}\r\n\r\nexport function _saveQuestionAnswer (answer) {\r\n  const authedUser= answer.authed\r\n  const question_id = answer.question_id\r\n  const selectedOption =answer.selectedOption\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          answers: {\r\n            ...users[authedUser].answers,\r\n            [question_id]: selectedOption\r\n          }\r\n        }\r\n      }\r\n\r\n      questions = {\r\n        ...questions,\r\n        [question_id]: {\r\n          ...questions[question_id],\r\n          [selectedOption]: {\r\n            ...questions[question_id][selectedOption],\r\n            votes: questions[question_id][selectedOption].votes.concat([authedUser])\r\n          }\r\n        }\r\n      }\r\n\r\n      res()\r\n    }, 500)\r\n  })\r\n}\r\n","export default __webpack_public_path__ + \"static/media/icon1.44556e00.png\";","export default __webpack_public_path__ + \"static/media/icon2.082c8bb9.png\";","export default __webpack_public_path__ + \"static/media/icon3.5f3c00df.png\";","export default __webpack_public_path__ + \"static/media/icon4.5fedd648.png\";","export default __webpack_public_path__ + \"static/media/icon5.cc8e887f.png\";","import { _createNewUser } from \"../utils/_DATA\"\r\nimport { hideLoading, showLoading } from \"react-redux-loading-bar\" \r\nexport const GET_USERS = \"GET_USERS\"\r\nexport const CREATE_NEW_USER = \"CREATE_NEW_USER\"\r\n\r\nexport function getUsers(users) {\r\n    return{\r\n        type: GET_USERS,\r\n        users\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction createNewUser(user) {\r\n    return{\r\n        type: CREATE_NEW_USER,\r\n        user\r\n    }\r\n}\r\n\r\nexport function handleCreateNewUser(user){\r\n    return (dispatch) => {\r\n        dispatch(showLoading())\r\n        return _createNewUser(user)\r\n        .then((user) => dispatch(createNewUser(user)))\r\n        .then(() => dispatch(hideLoading()))\r\n    }\r\n}\r\n\r\n","import { _saveQuestion } from \"../utils/_DATA\";\r\nimport { _saveQuestionAnswer } from \"../utils/_DATA\";\r\nimport { hideLoading, showLoading } from \"react-redux-loading-bar\";\r\nexport const GET_QUESTIONS =\"GET_QUESTIONS\";\r\nexport const SAVE_QUESTION = \"SAVE_QUESTION\";\r\nexport const SAVE_QUESTION_ANSWER= \"SAVE_QUESTION_ANSWER\"\r\n\r\n\r\nexport function getQuestions (questions) {\r\n    return {\r\n      type: GET_QUESTIONS,\r\n      questions,\r\n    }\r\n}\r\n\r\n\r\nfunction saveQuestion (question) {\r\n  return {\r\n    type: SAVE_QUESTION,\r\n    question\r\n  }\r\n}\r\n\r\nexport function handleSaveQuestion (info) {\r\n  return (dispatch) => {\r\n    dispatch(showLoading())\r\n    return _saveQuestion(info)\r\n      .then((question) => dispatch(saveQuestion(question)))\r\n      .then(() => dispatch(hideLoading()))\r\n  }\r\n}\r\n\r\nfunction saveQuestionAnswer (answer) {\r\n  return {\r\n    type: SAVE_QUESTION_ANSWER,\r\n    answer\r\n  }\r\n}\r\n\r\nexport function handleSaveQuestionAnswer (answer) {\r\n  return (dispatch) => {\r\n    \r\n    dispatch(showLoading())\r\n    return _saveQuestionAnswer(answer)\r\n      .then(dispatch(saveQuestionAnswer(answer)))\r\n      .then(() => dispatch(hideLoading()))\r\n  }\r\n}\r\n\r\n","export const GET_AUTHED_USER = \"GET_AUTHED_USER\"\r\nexport const SET_AUTHED_USER = \"SET_AUTHED_USER\"\r\n\r\n\r\n\r\nexport function setAuthedUser (user) {\r\n    return {\r\n      type: SET_AUTHED_USER,\r\n      user,\r\n    }\r\n}\r\n\r\nexport function getAuthedUser () {\r\n    return {\r\n      type: GET_AUTHED_USER\r\n    }\r\n}\r\n\r\n","import { getUsers } from \"./users\";\r\nimport { getQuestions } from \"./questions\";\r\nimport { setAuthedUser } from \"./authedUser\";\r\nimport { _getUsers } from \"../utils/_DATA\";\r\nimport { _getQuestions } from \"../utils/_DATA\";\r\nimport { hideLoading, showLoading} from \"react-redux-loading-bar\";\r\n\r\nfunction getInitialData() {\r\n  return Promise.all([\r\n    _getUsers(),\r\n    _getQuestions(),\r\n  ]).then(([users, questions]) => ({\r\n    users,\r\n    questions,\r\n  }))\r\n}\r\n\r\nexport function handleInitialData() {\r\n    return (dispatch) => {\r\n      dispatch(showLoading())\r\n      return getInitialData()\r\n        .then(({users, questions}) => {\r\n          dispatch(getUsers(users))\r\n          dispatch(setAuthedUser(null))\r\n          dispatch(getQuestions(questions))\r\n          dispatch(hideLoading())\r\n        })\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Button, Container, FloatingLabel, Form, Row } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { handleSaveQuestion } from '../actions/questions'\r\n\r\nclass NewQuestion extends Component {\r\n    state= {\r\n        optionOneText:\"\",\r\n        optionTwoText:\"\",\r\n        questionSubmitted: false\r\n    }\r\n    handleChangeOne = (event)=> {\r\n        this.setState({\r\n            optionOneText: event.target.value\r\n        })\r\n    }\r\n    handleChangeTwo = (event)=> {\r\n        this.setState({\r\n            optionTwoText: event.target.value\r\n        })\r\n    }\r\n    handleSubmit = (event)=> {\r\n        event.preventDefault()\r\n        const auther = this.props.authedUser\r\n        this.props.dispatch(handleSaveQuestion({...this.state, ...auther }))\r\n        setTimeout( () => this.setState({\r\n            questionSubmitted:true\r\n        })\r\n        ,1500 )    \r\n    }\r\n    render() {\r\n        const { questionSubmitted } = this.state\r\n        return (\r\n            <Container className='border border-dark rounded shadow bg-info bg-gradient my-4 pb-3'>\r\n                <Row>\r\n                    <h3 className='bg-dark text-light py-2'>Create New Question</h3>\r\n                </Row>\r\n                \r\n                <Row className='text-center'>\r\n                    <p style={{fontWeight:\"bold\"}}>Would You Rather....</p>\r\n                </Row>\r\n                \r\n                <Row style={{maxWidth:750}} className='text-center mx-auto'>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <FloatingLabel  controlId=\"floatingInput\" label=\"Please Enter The First Option\" className=\"mb-3\">\r\n                            <Form.Control \r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Please Enter The First Option\"\r\n                            value={this.state.optionOneText}\r\n                            onChange={this.handleChangeOne}/>\r\n                        </FloatingLabel>\r\n\r\n                        <p> OR </p>\r\n\r\n                        <FloatingLabel  controlId=\"floatingInput\" label=\"Please Enter The Second Option\" className=\"mb-3\">\r\n                            <Form.Control \r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Please Enter The Second Option\"\r\n                            value={this.state.optionTwoText}\r\n                            onChange={this.handleChangeTwo}/>\r\n                        </FloatingLabel>\r\n                        \r\n                        <Button \r\n                            className='border border-dark border-1' \r\n                            variant='light' \r\n                            type=\"submit\">\r\n                            Submit Question\r\n                        </Button>\r\n                        {questionSubmitted &&  <Redirect to=\"/would-you-rather-starter\" /> }\r\n                    </Form>\r\n                </Row>\r\n                \r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser }) {\r\n    return { authedUser }\r\n}\r\nexport default connect(mapStateToProps)(NewQuestion)\r\n","export default __webpack_public_path__ + \"static/media/logo.721677d1.jpg\";","import React, { Component } from 'react'\r\nimport { Alert, Button, Col, Container, FloatingLabel, Form , Image, Row} from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { setAuthedUser } from '../actions/authedUser'\r\nimport { handleCreateNewUser } from '../actions/users'\r\nimport logo from \"../img/logo.jpg\"\r\nimport { avatarURLs } from '../utils/_DATA'\r\n\r\n\r\nclass SignIn extends Component {\r\n    state= {\r\n      selectedUser:\"Select Your UserName\",\r\n      newUserName:\"\",\r\n      newUserId:\"\",\r\n      alertLogin:\"\",\r\n      alertSignUp:\"\",\r\n      avatar:\"\"\r\n    }\r\n    //sign in handle\r\n    handleChange = (event)=> {\r\n      this.setState({\r\n        selectedUser: event.target.value\r\n      })\r\n    }\r\n\r\n    handleSubmit = (event)=>{\r\n      event.preventDefault()\r\n      const {dispatch} = this.props\r\n      const {selectedUser} =this.state\r\n      if(selectedUser===\"Select Your UserName\"){\r\n        this.setState({\r\n          alertLogin:\"Please Select Your UserName !\"\r\n        })\r\n        return\r\n      }\r\n      dispatch(setAuthedUser(selectedUser))\r\n    }\r\n    // create new user handle\r\n    handleChangeNewName = (event)=>{\r\n      this.setState({\r\n        newUserName: event.target.value\r\n      })\r\n    }\r\n\r\n    handleChangeNewId = (event)=>{\r\n      this.setState({\r\n        newUserId: event.target.value\r\n      })\r\n    }\r\n\r\n    handleSubmitNew = (event)=>{\r\n      event.preventDefault()\r\n      const {dispatch, usersNames, usersIDs} = this.props\r\n      const {newUserName, newUserId, avatar} =this.state\r\n      if((usersNames.includes(newUserName.trim())) || (usersIDs.includes(newUserId.trim()))){\r\n        this.setState({\r\n          alertSignUp:\"Error! The User Name or User ID or both are already taken by another user\"\r\n        })\r\n        return\r\n      }\r\n      dispatch(handleCreateNewUser({\r\n        name: newUserName.trim(),\r\n        id: newUserId.trim(),\r\n        avatar\r\n      }))\r\n      this.setState({\r\n        alertSignUp:\"Your account has been created!\"\r\n      })\r\n    }\r\n\r\n    handleChangeAvatar= (event)=>{\r\n      this.setState({\r\n        avatar: event.target.value\r\n      })\r\n    }\r\n    render() {\r\n        const {  usersNames, usersIDs } = this.props\r\n        const { alertLogin, alertSignUp} = this.state\r\n        return (\r\n            <Container \r\n              fluid \r\n              style={{height:\"100vh\", overflowY:\"auto\"}}\r\n              className='d-flex text-dark bg-info bg-gradient'>\r\n               <Container\r\n                className='d-flex justify-content-center align-items-center flex-column my-auto'\r\n               >\r\n                <Row className='justify-content-center text-center'>\r\n                  <h3 style={{fontWeight:\"bold\"}} className='border-bottom border-1 border-dark my-3 pb-3'> Welcome To Would You Rather Game</h3>\r\n                  <Image className='my-3' src={logo} roundedCircle style={{maxWidth:250}} />\r\n                </Row>\r\n\r\n                <Row\r\n                  className='justify-content-center'\r\n                >\r\n                  <Col lg className='border border-1 my-3 mx-2 my-auto shadow rounded'>\r\n                    <Row className='justify-content-center text-center'>\r\n                      <h2 style={{fontWeight:\"bold\"}} className='bg-light bg-gradient py-2 mb-3 rounded'>Login</h2>\r\n                      <p style={{fontWeight:\"bold\"}} className='text-capitalize'>To continue please Log in with your user name from down below </p>\r\n                        <Form style={{maxWidth:300}} className='mb-3' onSubmit={this.handleSubmit}>\r\n                          <Form.Select \r\n                            className='mt-3 mb-3 border border-secondary'\r\n                            onChange={this.handleChange} \r\n                            value={this.state.selectedUser} \r\n                            aria-label=\"Default select example\">\r\n                                <option value=\"Select Your UserName\" disabled >Select Your UserName</option>\r\n                                    {usersNames.map((userName, index)=>(\r\n                                      <option  \r\n                                      className='bg-info'\r\n                                      key={usersIDs[index]} \r\n                                      value={usersIDs[index]}>\r\n                                        {userName}\r\n                                      </option>\r\n                                    ))}\r\n                          </Form.Select>\r\n\r\n                          {/* error message  */}\r\n                          {alertLogin!==\"\"&& (\r\n                            <Alert className='p-2' variant='danger'>\r\n                              {alertLogin}\r\n                            </Alert>\r\n                          )}\r\n\r\n                          <Button \r\n                            style={{fontWeight:\"bold\"}}\r\n                            className='border border-dark shadow rounded' \r\n                            variant=\"primary\" \r\n                            type=\"submit\">\r\n                              Log in\r\n                          </Button>  \r\n                        </Form>\r\n                    </Row>\r\n                  </Col>\r\n\r\n                  <Col style={{maxHeight:300, overflowY:\"scroll\"}} lg className='border border-1 my-3 mx-2 shadow rounded'>\r\n                    <Row className='text-center justify-content-center'>\r\n                      <h2 style={{fontWeight:\"bold\"}} className='bg-light bg-gradient py-2 mb-3 rounded'>  Sign up </h2> \r\n                      <p style={{fontWeight:\"bold\"}}>Create your own user, Try it Now for Free !</p>\r\n                      <Form  style={{maxWidth:500}} className='mb-3' onSubmit={this.handleSubmitNew}>\r\n                          <Form.Group className=\"mb-3\">\r\n                            <FloatingLabel label=\"User Name\">\r\n                              <Form.Control \r\n                                type=\"text\" \r\n                                required\r\n                                value={this.state.newUserName}\r\n                                onChange={this.handleChangeNewName}\r\n                                placeholder=\"Enter your User Name\" />\r\n                            </FloatingLabel>\r\n                          </Form.Group>\r\n\r\n                          <Form.Group className=\"mb-3\">\r\n                            <FloatingLabel label=\"User ID\">\r\n                            <Form.Control \r\n                              value={this.state.newUserId}\r\n                              onChange={this.handleChangeNewId}\r\n                              type=\"text\" \r\n                              required\r\n                              placeholder=\"Password\" />\r\n                            </FloatingLabel>\r\n                          </Form.Group>\r\n                       \r\n                          <Form.Group as={Row} className='mb-3'>\r\n                            <Form.Label className='mb-3' style={{fontWeight:\"bold\"}}>\r\n                              Choose an Avatar\r\n                            </Form.Label>\r\n                            <div>\r\n                              {Object.values(avatarURLs).map(icon=>(\r\n                                    <Form.Check\r\n                                      required\r\n                                      key={icon}\r\n                                      inline\r\n                                      name=\"group1\"\r\n                                      value={icon}\r\n                                      onChange={this.handleChangeAvatar}\r\n                                      className='text-start'\r\n                                      type=\"radio\"\r\n                                      label={<Image roundedCircle style={{maxWidth:45}} src={icon} alt=\"avatar\" />}\r\n                                    />\r\n                              ))}\r\n                            </div>\r\n                         </Form.Group>\r\n                         \r\n                        {/* error message  */}\r\n                            {alertSignUp!==\"\"&& (\r\n                            <Alert \r\n                            className='p-2 text-center' \r\n                            variant={alertSignUp.includes(\"account\")?\"success\":\"danger\"}>\r\n                              {alertSignUp}\r\n                            </Alert>\r\n                            )}  \r\n\r\n                          <Button\r\n                          style={{fontWeight:\"bold\"}} \r\n                          className='border border-dark shadow rounded'\r\n                          variant=\"success\" \r\n                          type=\"submit\">\r\n                            Sign up\r\n                          </Button>\r\n                      </Form>\r\n                    </Row>    \r\n                  </Col>\r\n                </Row>\r\n               </Container>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps ({ users }) {\r\n    \r\n  let usersNames = []\r\n  for(const user in users){\r\n    const userName = users[user].name\r\n    usersNames.push(userName)\r\n  }\r\n    return {\r\n      usersIDs: Object.keys(users),\r\n      usersNames,\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps)(SignIn)","import React, { Component } from 'react'\r\nimport { Button, Col, Image, Row } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass QuestionOverview extends Component {\r\n    render() {\r\n        const {name , selectedOption , avatarURL, Answered, qID } = this.props\r\n        \r\n        return (\r\n            <Row style={{maxWidth:700}} className='border border-dark rounded bg-light pb-3 my-3 mx-auto'>\r\n                <h4 className='bg-dark py-2 px-5 text-light'>{name} {Answered?<span>asked:-</span>:<span>asks:-</span>}</h4>\r\n                <Col className='text-center' md={4}>\r\n                    <Image style={{maxWidth:100}} src={avatarURL} roundedCircle alt=\"avatar\"/>\r\n                </Col>\r\n                \r\n                <Col className='text-center border-start' md={8}>\r\n                    <h5 className='text-capitalize'> would you rather </h5>\r\n                    <p className='text-muted'>{selectedOption}, OR .....</p>\r\n                    <Button variant='outline-dark'>\r\n                        <Link\r\n                            className='text-decoration-none poll'  \r\n                            to={{pathname:`/would-you-rather-starter/questions/${qID}`}}>\r\n                            View Poll \r\n                        </Link>\r\n                    </Button>\r\n                </Col>\r\n                \r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(QuestionOverview)\r\n","import React, { Component } from 'react'\r\nimport { Alert, Button, Col, Container, Row } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport QuestionOverview from './QuestionOverview'\r\n\r\nclass QuestionsContainer extends Component {\r\n    state = {\r\n        unAnswered: true\r\n    }\r\n    handleClick = (bool)=> {\r\n        this.setState({\r\n            unAnswered: bool\r\n        })\r\n    }\r\n    render() {\r\n        const {answeredQuestionsData, UnansweredQuestionsData } = this.props\r\n        const { unAnswered } = this.state\r\n        return (\r\n            <Container className='border border-dark bg-info bg-gradient shadow rounded my-4'>\r\n\r\n                <Row className='text-center border rounded bg-light bg-gradient mb-5 p-3'>\r\n                    <Col style={{maxWidth:400}} className='mx-auto'>\r\n                        <Button \r\n                            style={{fontWeight:\"bold\"}}\r\n                            className='w-100' \r\n                            variant={unAnswered?\"dark\":\"outline-dark\"} \r\n                            onClick={()=>this.handleClick(true)}> \r\n                            Unanswered Questions \r\n                        </Button>\r\n                    </Col>\r\n                    <Col style={{maxWidth:400}} className='mx-auto'>\r\n                        <Button\r\n                            style={{fontWeight:\"bold\"}}\r\n                            variant={unAnswered?\"outline-dark\":\"dark\"} \r\n                            className='w-100 outline-none' \r\n                            onClick={()=>this.handleClick(false)}> \r\n                            Answered Questions\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                \r\n                {unAnswered\r\n                ?\r\n                UnansweredQuestionsData.map(q => \r\n                    <QuestionOverview \r\n                    key={q.id}\r\n                    avatarURL={q.avatarURL}\r\n                    qID={q.id}\r\n                    Answered={false}\r\n                    name={q.name}\r\n                    selectedOption={q.optionOne.text} \r\n                />\r\n                )\r\n                :answeredQuestionsData.map(q => \r\n                    <QuestionOverview \r\n                    key={q.id}\r\n                    avatarURL={q.avatarURL}\r\n                    qID={q.id}\r\n                    name={q.name}\r\n                    Answered={true}\r\n                    selectedOption={q[q.selectedOption].text} \r\n                />\r\n                )}\r\n                \r\n                {(UnansweredQuestionsData.length===0&&unAnswered===true)&&(\r\n                    <Alert style={{maxWidth:700, fontWeight:\"bold\"}} className='p-2 my-3 text-center mx-auto border shadow rounded' variant='success'>\r\n                        <p>WOW! You Have Answered All Available Questions.</p>\r\n                        <p>There are no more questions for now!</p>\r\n                        <p>Try creating your own questions from <Link to='/would-you-rather-starter/add'>Here</Link></p>\r\n                    </Alert>\r\n                )}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({authedUser, questions, users } ) {\r\n    //get authed user \r\n    const theAuthedUser =  Object.keys(users).find(user => user === authedUser.authed )\r\n    let answeredQuestions = {}\r\n    let answeredQuestionsData = []\r\n    // get all answered questions of the authed user\r\n    for (const user in users) {\r\n            if (user=== theAuthedUser){\r\n                answeredQuestions = users[user].answers\r\n            }\r\n    }\r\n         // getting answered questions //\r\n    // collect all the data we need about every answered question\r\n    for (const ansQuestion in answeredQuestions) {\r\n        // basic data\r\n        const wantedData = {...questions[ansQuestion]}\r\n        // avatar \r\n        wantedData.avatarURL= users[wantedData.author].avatarURL\r\n        // author's name\r\n        wantedData.name= users[wantedData.author].name\r\n        // selected answer for the question\r\n        wantedData.selectedOption = answeredQuestions[ansQuestion]\r\n        // putting all data together  \r\n        answeredQuestionsData.push(wantedData)\r\n    }   \r\n    // sorting the answered questions based on the timestamp(the newest at top)\r\n    answeredQuestionsData.sort((a, b)=>  b.timestamp - a.timestamp)\r\n\r\n\r\n\r\n       // getting unanswered questions // \r\n    //initial data \r\n    let UnansweredQuestions = Object.values(questions)\r\n    let UnansweredQuestionsData = []\r\n    //start filtering all answered questions by authed users to get only unanswered\r\n    for (const ansQuestion in answeredQuestions){\r\n        const filtered = UnansweredQuestions.find(q => q.id === ansQuestion)\r\n        const filteredID = UnansweredQuestions.indexOf(filtered)\r\n        UnansweredQuestions.splice(filteredID, 1)\r\n    }\r\n    // collect all the data we need about every unanswered question\r\n    for (const unansQuestion in UnansweredQuestions){\r\n        // basic data\r\n       const wantedData= UnansweredQuestions[unansQuestion]\r\n       // avatar \r\n       wantedData.avatarURL= users[wantedData.author].avatarURL\r\n       // author's name\r\n       wantedData.name= users[wantedData.author].name\r\n       // putting all data together  \r\n       UnansweredQuestionsData.push(wantedData)\r\n    }\r\n    // sorting the unanswered questions based on the timestamp(the newest at top)\r\n        UnansweredQuestionsData.sort((a, b)=>  b.timestamp - a.timestamp)\r\n\r\n\r\n    return {\r\n        answeredQuestionsData,\r\n        UnansweredQuestionsData\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(QuestionsContainer)\r\n","import React from 'react'\r\nimport { Button , Image,Container,Nav, Col } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { setAuthedUser } from '../actions/authedUser'\r\n\r\nfunction NavBar(props){\r\n    const location= useLocation()\r\n    const path = location.pathname\r\n    //log out \r\n   const handleClick = (event)=> {\r\n        event.preventDefault()\r\n        const {dispatch} = props\r\n        dispatch(setAuthedUser(null))\r\n    }\r\n    const {UserInfo} = props\r\n    return (\r\n             <Container className=\"border container border-dark rounded shadow bg-info bg-gradient px-2 py-2 mt-2\">\r\n                <Nav className=\"justify-content-start  align-items-center\">\r\n                    <Col \r\n                    id='left-nav-col'\r\n                    className='d-flex justify-content-start align-items-center'\r\n                    sm={12} xs={12} md={8}>\r\n                        <Nav.Item\r\n                            data-active={path===\"/would-you-rather-starter\"}  \r\n                            className='mx-2 p-3 rounded text-center'>\r\n                            <Link  className=\"text-decoration-none\" to=\"/would-you-rather-starter\" >\r\n                                Home\r\n                            </Link>\r\n                        </Nav.Item>\r\n                        \r\n                        <Nav.Item  \r\n                            data-active={path===\"/would-you-rather-starter/add\"}\r\n                            className='mx-2 p-3 rounded text-center'>\r\n                            <Link className=\"text-decoration-none \" to=\"/would-you-rather-starter/add\" >\r\n                                New Question\r\n                            </Link>\r\n                        </Nav.Item>\r\n\r\n                        <Nav.Item  \r\n                             data-active={path===\"/would-you-rather-starter/leaderboard\"}\r\n                            className='mx-2 p-3 rounded text-center'>\r\n                            <Link  className=\"text-decoration-none\" to=\"/would-you-rather-starter/leaderboard\">\r\n                                Leader Board\r\n                            </Link>\r\n                        </Nav.Item>\r\n                    </Col>\r\n                    \r\n                    <Col \r\n                    id='right-nav-col'\r\n                    className='d-flex justify-content-center align-items-center'\r\n                    sm={12} xs={12} md={4}>\r\n                        <Nav.Item className=\"mx-2 text-center\">\r\n                            <p className=\"d-inline rounded  my-0\" > Hello, {UserInfo.userName} </p>\r\n                            <Image \r\n                            className='shadow'\r\n                            roundedCircle  \r\n                            style={{maxWidth:40}} \r\n                            src={UserInfo.userAvatar} \r\n                            alt=\"userAvatar\"/>\r\n                        </Nav.Item>\r\n                        \r\n                        \r\n                        <Nav.Item  className=\"mx-2\">\r\n                            <Link to=\"/would-you-rather-starter\">\r\n                                <Button\r\n                                style={{fontWeight:\"bold\"}} \r\n                                className='rounded'\r\n                                size=\"sm\"\r\n                                onClick={handleClick} \r\n                                variant='outline-danger' >\r\n                                    Log Out\r\n                                </Button>\r\n                            </Link>\r\n                        </Nav.Item>\r\n                    </Col>\r\n                    \r\n                    \r\n                </Nav>       \r\n            </Container>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps( {authedUser , users} ){\r\n    const loggedInUser= authedUser.authed\r\n    const UserInfo = {}\r\n    if(loggedInUser !== undefined && loggedInUser !== null){\r\n        UserInfo.userName = users[loggedInUser].name\r\n        UserInfo.userAvatar =  users[loggedInUser].avatarURL\r\n    }\r\n    \r\n    return{\r\n        loggedInUser,\r\n        UserInfo\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps)(NavBar)","export default __webpack_public_path__ + \"static/media/first-place.a3189a9d.png\";","export default __webpack_public_path__ + \"static/media/second-place.57dc359b.png\";","export default __webpack_public_path__ + \"static/media/third-place.167cfa17.png\";","import React, { Component } from 'react'\r\nimport { Col, Image, Row } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport first from '../img/leaderBoard/first-place.png'\r\nimport second from '../img/leaderBoard/second-place.png'\r\nimport third from '../img/leaderBoard/third-place.png'\r\n\r\n\r\nclass LeaderBoard extends Component {\r\n    render() {\r\n        const { LeaderBoardData } = this.props\r\n        return (\r\n            <ul className='container border border-1 border-dark shadow rounded bg-info bg-gradient my-4'>\r\n\r\n                {LeaderBoardData[0] !== undefined && (LeaderBoardData.map((user,index)=> \r\n                    <li style={{maxWidth:700}} className='row align-items-center border border-1 border-dark rounded px-2 shadow bg-light bg-gradient my-3 mx-auto py-2' key={user.userId}>\r\n                        <Col md={4} className='text-center'>\r\n                            <Image\r\n                            className='me-2'\r\n                            style={{maxWidth:70}}\r\n                            rounded \r\n                            src={index===0?first:(index===1?second:third)} \r\n                            alt=\"user-rank-badge\"/>\r\n                            <Image \r\n                            style={{maxWidth:120}}\r\n                            roundedCircle \r\n                            src={user.userAvatar} \r\n                            alt=\"user-avatar\"/>\r\n                        </Col>\r\n\r\n                        <Col style={{fontWeight:\"bold\"}} md={6} className='text-left'>\r\n                            <h3 style={{fontWeight:\"bold\"}}>{user.userName}</h3>\r\n                            <Row className='bg-success rounded text-light py-1  mb-1 align-items-center'>\r\n                                <Col className='col-8'>Answered Questions</Col>\r\n                                <Col className='text-end col-4'>{user.answeredQuestions}</Col>\r\n                            </Row>\r\n                            <Row className='bg-warning rounded text-light py-1 align-items-center'>\r\n                                <Col className='col-8'>Created Questions</Col>\r\n                                <Col className='text-end col-4'>{user.createdQuestions}</Col>\r\n                            </Row>\r\n                        </Col>\r\n\r\n                        <Col style={{fontWeight:\"bold\"}} md={2} className='text-center rounded mt-4'>\r\n                            <h5 className='bg-dark text-light  py-2 m-0'>Score</h5>\r\n                            <span className='d-block  bg-info py-2 '>{user.score}</span>\r\n                        </Col>\r\n                    </li>\r\n                    ))\r\n                }\r\n             </ul>\r\n        )\r\n    }\r\n}\r\n\r\nconst  mapStateToProps =  ( { users } ) => {\r\n    let LeaderBoardData = []\r\n    for (const user in users){\r\n        let userData = {}\r\n        userData.userName= users[user].name\r\n        userData.userId=users[user].id\r\n        userData.userAvatar= users[user].avatarURL\r\n        userData.answeredQuestions= Object.keys(users[user].answers).length\r\n        userData.createdQuestions= users[user].questions.length\r\n        userData.score= userData.createdQuestions+ userData.answeredQuestions\r\n        LeaderBoardData.push(userData)\r\n    }\r\n    // sorting the leaderBoard based on score (the best at top)\r\n    // and filtering the leaderBoard so that only remained are the top three \r\n    LeaderBoardData.sort( (b,a)=> a.score - b.score ).length=3\r\n    return{\r\n        LeaderBoardData\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(LeaderBoard)\r\n","import React from 'react'\r\nimport { Alert, Container, Row } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Container className='border border-1 border-dark shadow rounded mt-5 p-3'>\r\n            <Row style={{maxWidth:700}} className='text-center mx-auto'>\r\n                <Alert style={{fontWeight:\"bold\"}} variant='danger'>\r\n                    <h1>404 - Not Found!</h1>\r\n                    <Link to=\"/would-you-rather-starter\">Go Home</Link>\r\n                </Alert>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { handleSaveQuestionAnswer } from '../actions/questions'\r\n\r\n\r\nclass QuestionForm extends Component {\r\n    \r\n    state = {\r\n        selectedOption: \"optionOne\"\r\n    }\r\n    //handling option change\r\n    handleChange = (event)=>{\r\n        this.setState({\r\n            selectedOption: event.target.value\r\n        })\r\n    }\r\n    //handle submit method for submitting answer\r\n    handleSubmit = (event)=> {\r\n        event.preventDefault()\r\n        const { authed }= this.props.authedUser\r\n        const { question_id } = this.props.questionData\r\n        const { selectedOption } = this.state\r\n        this.props.dispatch(handleSaveQuestionAnswer({authed,question_id,selectedOption}))\r\n    }\r\n\r\n    render() {\r\n        const {questionData} = this.props\r\n        const { selectedOption }= this.state\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <Form.Check\r\n                className='my-2' \r\n                type=\"radio\"\r\n                label={questionData.optionOne} \r\n                value=\"optionOne\"\r\n                onChange={this.handleChange} \r\n                checked= {selectedOption===\"optionOne\"}\r\n                />\r\n\r\n                <Form.Check\r\n                type=\"radio\"\r\n                label={questionData.optionTwo} \r\n                value=\"optionTwo\"\r\n                onChange={this.handleChange} \r\n                checked= {selectedOption===\"optionTwo\"}\r\n                />\r\n\r\n                <Button className='w-75 my-2' variant='dark' type=\"submit\">Submit</Button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default connect()(QuestionForm)\r\n","import React from 'react'\r\nimport { Col, Container, Row ,Image } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { useLocation } from 'react-router'\r\nimport NotFound from './NotFound'\r\nimport QuestionForm from './QuestionForm'\r\n\r\n\r\nfunction Question(props)  {\r\n\r\n    const { questions, authedUser, users }= props\r\n    const location = useLocation()\r\n    const question_id = location.pathname.split('/')[location.pathname.split('/').length - 1]\r\n    let Answered = null\r\n    let questionData = {}\r\n    //checking for selcted option\r\n    let checkVoteOne= ''\r\n    let checkVoteTwo= ''\r\n\r\n    if (questions[question_id] !== undefined){\r\n\r\n        const author = questions[question_id].author\r\n        const avatarURL = users[author].avatarURL\r\n        const name = users[author].name\r\n             \r\n        if(Object.keys(users[authedUser.authed].answers).includes(question_id)){\r\n            Answered = true\r\n        }\r\n        else{\r\n            Answered = false\r\n        }\r\n        \r\n        //collecting the question data we need to display\r\n        \r\n        if(Answered===true){\r\n            \r\n            questionData.question_id= question_id\r\n            questionData.name= name\r\n            questionData.avatar= avatarURL\r\n            questionData.optionOne= questions[question_id].optionOne.text\r\n            questionData.voteForOne= questions[question_id].optionOne.votes.length\r\n            questionData.optionTwo= questions[question_id].optionTwo.text\r\n            questionData.voteForTwo= questions[question_id].optionTwo.votes.length\r\n            questionData.totalVotes= questions[question_id].optionOne.votes.length+ questions[question_id].optionTwo.votes.length\r\n            questionData.votePercentForOne= ((questionData.voteForOne/questionData.totalVotes)*100).toFixed(2)\r\n            questionData.votePercentForTwo= ((questionData.voteForTwo/questionData.totalVotes)*100).toFixed(2)\r\n            questionData.selectedOption= users[authedUser.authed].answers[question_id]\r\n        }\r\n        else{\r\n            \r\n            questionData.question_id= question_id\r\n            questionData.name= name\r\n            questionData.avatar= avatarURL\r\n            questionData.optionOne= questions[question_id].optionOne.text\r\n            questionData.optionTwo= questions[question_id].optionTwo.text\r\n        }\r\n        \r\n\r\n        if(questionData.selectedOption===\"optionOne\"){\r\n            checkVoteOne=\"true\"\r\n        }\r\n        else{\r\n            checkVoteTwo=\"true\"\r\n        }\r\n\r\n    } else{\r\n         Answered = null\r\n    }\r\n    \r\n\r\n        return (\r\n            <>\r\n           \r\n               {Answered===true?\r\n                    (<Container className='border border-dark bg-info bg-gradient shadow rounded my-3 p-3'>\r\n                        <Row style={{maxWidth:750}} className='border border-dark rounded bg-light pb-3 my-3 mx-auto'>\r\n                            <h4 className='bg-dark py-2 px-5 text-light'> Asked by {questionData.name} :- </h4>       \r\n                            <Col className='text-center my-auto' md={4}>\r\n                                <Image \r\n                                style={{maxWidth:100}}\r\n                                src={questionData.avatar} \r\n                                alt=\"user-avatar\" \r\n                                roundedCircle/>\r\n                            </Col>\r\n                            \r\n                            <Col className='border-start' md={8}>\r\n                                <h5 style={{fontWeight:'bold'}} className='ms-1'>Results:-</h5>\r\n                                <Row \r\n                                selectedoption={checkVoteOne}\r\n                                className='border border-warning border-2 rounded mx-1 mb-2 p-2 vote'>\r\n                                    <span className='mb-2' style={{fontWeight:'bold'}}>Would you rather {questionData.optionOne}?</span>\r\n                                    <span className='border rounded bg-secondary p-0'>\r\n                                        <span style={{width:questionData.votePercentForOne+\"%\"}} className='bg-warning d-inline-block text-center py-1 rounded'>{questionData.votePercentForOne}%</span>\r\n                                    </span>\r\n                                    <span style={{fontWeight:'bold'}}className='text-center'>{questionData.voteForOne} out of {questionData.totalVotes} votes</span>\r\n                                </Row>\r\n                                <Row \r\n                                selectedoption={checkVoteTwo}\r\n                                className='border border-warning border-2 rounded mx-1 p-2 vote'>\r\n                                    <span className='mb-2' style={{fontWeight:'bold'}}>Would you rather {questionData.optionTwo}?</span>\r\n                                    <span className='border rounded bg-secondary p-0'>\r\n                                        <span style={{width:questionData.votePercentForTwo+\"%\"}} className='bg-warning d-inline-block text-center py-1 rounded'>{questionData.votePercentForTwo}%</span>\r\n                                    </span> \r\n                                    <span style={{fontWeight:'bold'}}className='text-center'>{questionData.voteForTwo} out of {questionData.totalVotes} votes</span>\r\n                                </Row>\r\n                            </Col>\r\n                        \r\n                        </Row>\r\n                    </Container>)\r\n                    : \r\n                    ( Answered===null?\r\n                        <NotFound />\r\n                    :\r\n                    <Container className='border border-dark bg-info bg-gradient shadow rounded my-3 p-3'>\r\n                        <Row style={{maxWidth:750}} className='border border-dark rounded bg-light pb-3 my-3 mx-auto'>\r\n                            <h4 className='bg-dark py-2 px-5 text-light'> {questionData.name} asks :- </h4>\r\n                            <Col className='text-center my-auto' md={4}>\r\n                                <Image \r\n                                style={{maxWidth:100}}\r\n                                roundedCircle\r\n                                src={questionData.avatar} \r\n                                alt=\"user-avatar\"/>\r\n                            </Col>\r\n                            <Col className='border-start border-1'>\r\n                                <h3 style={{fontWeight:'bold'}} className='ms-1'>Would You Rather...</h3>\r\n                                <>\r\n                                    <QuestionForm questionData={questionData} authedUser={authedUser} />\r\n                                </>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>)\r\n                }\r\n            </>\r\n        )\r\n}\r\nconst mapStateToProps = ({ questions, authedUser, users }) => {\r\n\r\n    return {\r\n        questions,\r\n        authedUser,\r\n        users\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Question)\r\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom'\nimport {handleInitialData} from \"../actions/shared\"\nimport NewQuestion from './NewQuestion'\nimport SignIn from './SignIn'\nimport QuestionsContainer from './QuestionsContainer'\nimport NavBar from './NavBar'\nimport LeaderBoard from './LeaderBoard'\nimport Question from './Question'\nimport NotFound from './NotFound'\nimport  LoadingBar  from 'react-redux-loading-bar'\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch(handleInitialData())\n  }\n  render() {\n    const { authedUser } = this.props\n    return (\n      <Router>\n        <LoadingBar style={{ backgroundColor:\"hsl(192, 94%, 30%)\", height: '4px', position: \"absolute\" }}/>\n        {authedUser.authed !== null && authedUser.authed !== undefined ?\n        (  <Switch>\n            <Route exact path=\"/would-you-rather-starter\">\n              <NavBar />\n              <QuestionsContainer />\n            </Route>\n\n            <Route exact path=\"/would-you-rather-starter/questions/:question_id\">\n              <NavBar />\n              <Question />\n            </Route>\n\n            <Route exact path=\"/would-you-rather-starter/leaderboard\">\n              <NavBar />\n              <LeaderBoard />\n            </Route>\n\n            <Route exact path=\"/would-you-rather-starter/add\">\n              <NavBar />\n              <NewQuestion />\n            </Route>\n\n            <Route >\n              <NavBar />\n              <NotFound />\n            </Route>\n\n          </Switch>): (\n            <Switch>\n              <Route  path=\"/would-you-rather-starter\">\n                <SignIn />\n              </Route>\n            </Switch>\n          )\n        }\n      </Router>\n    )\n  }\n}\n\nfunction mapStateToProps( {authedUser} ){\n  return {authedUser}\n}\nexport default connect(mapStateToProps)(App) ","import { combineReducers } from \"redux\";\r\nimport users from \"./users\"\r\nimport questions from \"./questions\" \r\nimport authedUser from \"./authedUser\";\r\nimport { loadingBarReducer } from \"react-redux-loading-bar\";\r\n\r\nexport default combineReducers({\r\n    users,\r\n    questions,\r\n    authedUser,\r\n    loadingBar: loadingBarReducer\r\n})","import { GET_USERS } from \"../actions/users\"\r\nimport { SAVE_QUESTION, SAVE_QUESTION_ANSWER } from \"../actions/questions\"\r\nimport { CREATE_NEW_USER } from \"../actions/users\"\r\n\r\n\r\nexport default function users (state = {}, action) {\r\n  switch(action.type) {\r\n    case GET_USERS :\r\n      return {\r\n        ...state,\r\n        ...action.users\r\n      }\r\n    \r\n    case SAVE_QUESTION :\r\n      return{\r\n        ...state,\r\n        [action.question.author]:{\r\n          ...state[action.question.author],\r\n          questions:state[action.question.author].questions.concat([action.question.id])\r\n        }\r\n      }\r\n\r\n    case SAVE_QUESTION_ANSWER:\r\n      return{\r\n        ...state,\r\n        [action.answer.authed]: {\r\n          ...state[action.answer.authed],\r\n          answers: {\r\n            ...state[action.answer.authed].answers,\r\n            [action.answer.question_id]: action.answer.selectedOption\r\n          }\r\n        }\r\n      }\r\n\r\n      case CREATE_NEW_USER:\r\n        return{\r\n          ...state,\r\n          ...action.user\r\n        }\r\n\r\n    default :\r\n      return state\r\n  }\r\n}","import { GET_QUESTIONS,\r\n         SAVE_QUESTION ,\r\n         SAVE_QUESTION_ANSWER}  from \"../actions/questions\"\r\n\r\nexport default function questions (state = {}, action) {\r\n  switch(action.type) {\r\n    case GET_QUESTIONS :\r\n      return {\r\n        ...state,\r\n        ...action.questions\r\n      }\r\n    case SAVE_QUESTION :\r\n      return {\r\n        ...state,\r\n        [action.question.id]:action.question\r\n      }\r\n    case SAVE_QUESTION_ANSWER:\r\n      return {\r\n        ...state,\r\n        [action.answer.question_id]: {\r\n          ...state[action.answer.question_id],\r\n          [action.answer.selectedOption]: {\r\n            ...state[action.answer.question_id][action.answer.selectedOption],\r\n            votes: state[action.answer.question_id][action.answer.selectedOption].votes.concat([action.answer.authed])\r\n          }\r\n        }\r\n      }\r\n    default :\r\n      return state\r\n  }\r\n}","import { SET_AUTHED_USER } from \"../actions/authedUser\";\r\nimport { GET_AUTHED_USER } from \"../actions/authedUser\";\r\n\r\nexport default function authedUser (state = {}, action) {\r\n    switch(action.type) {\r\n      case SET_AUTHED_USER :\r\n        return {\r\n          \"authed\":action.user\r\n        }\r\n      case GET_AUTHED_USER :\r\n        return {\r\n          ...state,\r\n          [action.question.id]:action.question\r\n           \r\n        }\r\n      default :\r\n        return state\r\n    }\r\n  }","const logger = (store) => (next) => (action) => {\r\n    console.group(action.type)\r\n      console.log('The action: ', action)\r\n      const returnValue = next(action)\r\n      console.log('The new state: ', store.getState())\r\n    console.groupEnd()\r\n    return returnValue\r\n  }\r\n  \r\nexport default logger","import thunk from 'redux-thunk'\r\nimport logger from './logger'\r\nimport { applyMiddleware } from 'redux'\r\n\r\nexport default applyMiddleware(\r\n  thunk,\r\n  logger,\r\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './reducers'\nimport middleware from './middleware'\nimport \"./index.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\nconst store = createStore(reducer, middleware)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\ndocument.getElementById('root')\n) "],"sourceRoot":""}